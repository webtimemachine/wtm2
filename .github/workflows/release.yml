on:
  push:
    tags:
      - 'v*'

name: Create Release and Upload Release Assets

jobs:
  build:
    name: Create Release and Upload Release Assets
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install TurboRepo and dependencies
        run: |
          npm install turbo --global
          npm install

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Run turbo build
        run: turbo run build --filter=@wtm/extension...

      - name: Create ZIP files for Chrome and Firefox
        run: |
          zip -r chrome-extension.zip ./build/app_chrome
          zip -r firefox-extension.zip ./build/app_firefox

      - name: Build iOS app from Chrome code
        run: npm run app:build:ios

      - name: Copy ExportOptions.plist file
        run: cp app/ExportOptions.plist ./build/app_safari/wtm

      - name: Update xcode project file
        run: |
          sed -i '' 's/PRODUCT_BUNDLE_IDENTIFIER = com.ttt246llc.wtm;/PRODUCT_BUNDLE_IDENTIFIER = com.ttt246llc.wtm;\nPROVISIONING_PROFILE_SPECIFIER = "Web Time Machine Prov Profile Dev";/' ./build/app_safari/wtm/wtm.xcodeproj/project.pbxproj
          sed -i '' 's/PRODUCT_BUNDLE_IDENTIFIER = com.ttt246llc.wtm.Extension;/PRODUCT_BUNDLE_IDENTIFIER = com.ttt246llc.wtm.Extension;\nPROVISIONING_PROFILE_SPECIFIER = "Web Time Machine Prov Profile Dev Extension";/' ./build/app_safari/wtm/wtm.xcodeproj/project.pbxproj

      - name: Run turbo build for backend
        run: turbo run build --filter=backend

      - name: Zip backend build
        run: zip -r backend.zip ./build/backend

      - name: Install Dependencies
        run: brew install coreutils

      - name: Decode and Install Apple Provisioning Profiles and Certificate
        run: |
          echo "${{ secrets.ENCODED_CERTIFICATE }}" | base64 --decode --output cert.p12
          echo "${{ secrets.ENCODED_PROVISIONING_PROFILE_APP }}" | base64 --decode --output app.mobileprovision
          echo "${{ secrets.ENCODED_PROVISIONING_PROFILE_EXTENSION }}" | base64 --decode --output extension.mobileprovision

          KEYCHAIN_PATH=$RUNNER_TEMP/my_temporary.keychain
          security create-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH
          security import cert.p12 -P "${{ secrets.P12_PASSWORD }}" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychains -d user -s $KEYCHAIN_PATH
          security default-keychain -s $KEYCHAIN_PATH
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "${{ secrets.KEYCHAIN_PASSWORD }}" $KEYCHAIN_PATH

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp app.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
          cp extension.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/
        env:
          ENCODED_CERTIFICATE: ${{ secrets.ENCODED_CERTIFICATE }}
          ENCODED_PROVISIONING_PROFILE_APP: ${{ secrets.ENCODED_PROVISIONING_PROFILE_APP }}
          ENCODED_PROVISIONING_PROFILE_EXTENSION: ${{ secrets.ENCODED_PROVISIONING_PROFILE_EXTENSION }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

      - name: List all schemes
        working-directory: 'build/app_safari/wtm'
        run: xcodebuild -list

      - name: Build Safari Extension for Testing
        working-directory: 'build/app_safari/wtm'
        run: |
          xcodebuild build-for-testing -scheme "wtm (iOS)" -sdk iphonesimulator -derivedDataPath './build' -allowProvisioningUpdates

      - name: Archive the iOS App
        working-directory: 'build/app_safari/wtm'
        run: |
          xcodebuild archive -scheme "wtm (iOS)" -sdk iphoneos -configuration AppStoreDistribution DEVELOPMENT_TEAM=2858MX5336 CODE_SIGN_STYLE=Manual -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.4' archive -archivePath "$PWD/build/Web Time Machine.xcarchive" -allowProvisioningUpdates

      - name: Export the .ipa File
        working-directory: 'build/app_safari/wtm'
        run: |
          xcodebuild -exportArchive -archivePath "$PWD/build/Web Time Machine.xcarchive" -exportOptionsPlist "$PWD/ExportOptions.plist" DEVELOPMENT_TEAM=2858MX5336 -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.4' -exportPath "$PWD/build"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Web Time Machine Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Chrome extension Asset
        id: upload-release-asset-chrome
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: chrome-extension.zip
          asset_name: chrome-extension.zip
          asset_content_type: application/zip

      - name: Upload Release Firefox extension Asset
        id: upload-release-asset-firefox
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: firefox-extension.zip
          asset_name: firefox-extension.zip
          asset_content_type: application/zip

      - name: Upload Release Backend Asset
        id: upload-release-asset-backend
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: backend/backend.zip
          asset_name: backend.zip
          asset_content_type: application/zip

      - name: Upload .ipa to Release
        id: upload-release-asset-ipa
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: 'build/app_safari/wtm/build/wtm.ipa'
          asset_name: wtm.ipa
          asset_content_type: application/octet-stream